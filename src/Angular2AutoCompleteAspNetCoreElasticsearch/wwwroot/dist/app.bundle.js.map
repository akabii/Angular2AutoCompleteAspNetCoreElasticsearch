{"version":3,"sources":["webpack:///./angular2App/boot.ts","webpack:///./angular2App/app/app.module.ts","webpack:///./angular2App/app/app.component.ts","webpack:///./angular2App/app/app.component.html","webpack:///./angular2App/app/app.component.scss","webpack:///./angular2App/style/app.scss","webpack:///./angular2App/app/app.constants.ts","webpack:///./angular2App/app/app.routes.ts","webpack:///./angular2App/app/home/home.component.ts","webpack:///./angular2App/app/services/searchDataService.ts","webpack:///./angular2App/app/autocomplete/personCity.ts","webpack:///./angular2App/app/home/home.component.html","webpack:///./angular2App/app/autocomplete/search.component.ts","webpack:///./angular2App/app/autocomplete/personCityDataService.ts"],"names":[],"mappings":"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","file":"dist/app.bundle.js","sourcesContent":["import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule }              from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./angular2App/boot.ts\n **/","import { NgModule } from '@angular/core';\r\nimport { CommonModule }   from '@angular/common';\r\nimport { FormsModule }    from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppComponent }  from './app.component';\r\nimport { Configuration } from './app.constants';\r\nimport { routing } from './app.routes';\r\nimport { HttpModule, JsonpModule } from '@angular/http';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nimport { Ng2CompleterModule } from \"ng2-completer\";\r\nimport { AutocompleteSearchComponent } from './autocomplete/search.component';\r\nimport { SearchDataService } from './services/searchDataService';\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        CommonModule,\r\n        Ng2CompleterModule,\r\n        FormsModule,\r\n        routing,\r\n        HttpModule,\r\n        JsonpModule\r\n    ],\r\n    declarations: [\r\n        AppComponent,\r\n        HomeComponent,\r\n        AutocompleteSearchComponent\r\n    ],\r\n    providers: [\r\n        SearchDataService,\r\n        Configuration\r\n    ],\r\n    bootstrap:    [AppComponent],\r\n})\r\n\r\nexport class AppModule {}\n\n\n/** WEBPACK FOOTER **\n ** ./angular2App/app/app.module.ts\n **/","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'my-app',\r\n    template: require('./app.component.html'),\r\n    styles: [require('./app.component.scss'), require('../style/app.scss')]\r\n})\r\n\r\n\r\nexport class AppComponent {\r\n\r\n    constructor(private router: Router) {\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./angular2App/app/app.component.ts\n **/","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top: 15px;\\\">\\r\\n\\r\\n    <nav class=\\\"navbar navbar-inverse\\\">\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"navbar-header\\\">\\r\\n                <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Angular2 Auto Complete, ASP.NET Core Elasticsearch</a>\\r\\n            </div>\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <!--<li><a [routerLink]=\\\"['/home']\\\">Home</a></li>-->\\r\\n            </ul>\\r\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                <li><a href=\\\"https://twitter.com/damien_bod\\\"><img src=\\\"assets/damienbod.jpg\\\" height=\\\"40\\\" style=\\\"margin-top: -10px;\\\" /></a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </nav>\\r\\n\\r\\n    <router-outlet></router-outlet>\\r\\n\\r\\n    <footer>\\r\\n        <p>\\r\\n            <a href=\\\"https://twitter.com/damien_bod\\\">DamienBod</a>&nbsp;Blog: <a href=\\\"https://damienbod.com/\\\">Software Engineering</a>\\r\\n            &copy; 2016\\r\\n        </p>\\r\\n    </footer>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./angular2App/app/app.component.html\n ** module id = 59\n ** module chunks = 0\n **/","module.exports = \"// style-loader: Adds some css to the DOM by adding a <style> tag\\n\\n// load the styles\\nvar content = require(\\\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./app.component.scss\\\");\\nif(typeof content === 'string') content = [[module.id, content, '']];\\n// add the styles to the DOM\\nvar update = require(\\\"!./../../node_modules/style-loader/addStyles.js\\\")(content, {});\\nif(content.locals) module.exports = content.locals;\\n// Hot Module Replacement\\nif(module.hot) {\\n\\t// When the styles change, update the <style> tags\\n\\tif(!content.locals) {\\n\\t\\tmodule.hot.accept(\\\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./app.component.scss\\\", function() {\\n\\t\\t\\tvar newContent = require(\\\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./app.component.scss\\\");\\n\\t\\t\\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\\n\\t\\t\\tupdate(newContent);\\n\\t\\t});\\n\\t}\\n\\t// When the module is disposed, remove the <style> tags\\n\\tmodule.hot.dispose(function() { update(); });\\n}\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./angular2App/app/app.component.scss\n ** module id = 60\n ** module chunks = 0\n **/","module.exports = \"// style-loader: Adds some css to the DOM by adding a <style> tag\\n\\n// load the styles\\nvar content = require(\\\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./app.scss\\\");\\nif(typeof content === 'string') content = [[module.id, content, '']];\\n// add the styles to the DOM\\nvar update = require(\\\"!./../../node_modules/style-loader/addStyles.js\\\")(content, {});\\nif(content.locals) module.exports = content.locals;\\n// Hot Module Replacement\\nif(module.hot) {\\n\\t// When the styles change, update the <style> tags\\n\\tif(!content.locals) {\\n\\t\\tmodule.hot.accept(\\\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./app.scss\\\", function() {\\n\\t\\t\\tvar newContent = require(\\\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./app.scss\\\");\\n\\t\\t\\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\\n\\t\\t\\tupdate(newContent);\\n\\t\\t});\\n\\t}\\n\\t// When the module is disposed, remove the <style> tags\\n\\tmodule.hot.dispose(function() { update(); });\\n}\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./angular2App/style/app.scss\n ** module id = 61\n ** module chunks = 0\n **/","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class Configuration {\r\n    public Server: string = \"http://localhost:5000/\";\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./angular2App/app/app.constants.ts\n **/","import { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', component: HomeComponent },\r\n    { path: 'home', component: HomeComponent }\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(appRoutes);\n\n\n/** WEBPACK FOOTER **\n ** ./angular2App/app/app.routes.ts\n **/","import { Observable } from 'rxjs/Observable';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\nimport { AutocompleteSearchComponent } from '../autocomplete/search.component';\r\nimport { SearchDataService } from '../services/searchDataService';\r\nimport { PersonCity } from '../autocomplete/personCity';\r\n\r\n@Component({\r\n    selector: 'homecomponent',\r\n    template: require('./home.component.html'),\r\n    providers: [SearchDataService],\r\n    styles: [ require('../../style/app.scss')]\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n    public message: string;\r\n    public PersonCityItems: any[];\r\n    public SelectedPersonCity: PersonCity;\r\n    public IndexExists: boolean = false;;\r\n\r\n    constructor(private _dataService: SearchDataService) {\r\n        this.message = \"Hello from HomeComponent constructor\";\r\n        this.SelectedPersonCity = new PersonCity();\r\n    }\r\n\r\n    public CreateTestData() {\r\n        this._dataService.CreateTestData().subscribe(data => data,\r\n            error => console.log(error),\r\n            () => console.log('Get all complete'));\r\n    }\r\n\r\n    public CreateIndex() {\r\n        if (!this.IndexExists) {\r\n            this._dataService.CreateIndex().subscribe(data => data,\r\n                error => console.log(error),\r\n                () => console.log('Get all complete'));\r\n\r\n            this.IndexExists = true;\r\n        }      \r\n    }\r\n\r\n    ngOnInit() {\r\n        this._dataService\r\n            .IndexExists()\r\n            .subscribe(data => this.IndexExists = data,\r\n            error => console.log(error),\r\n            () => console.log('Get all complete'));\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./angular2App/app/home/home.component.ts\n **/","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map'\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration } from '../app.constants';\n\n@Injectable()\nexport class SearchDataService {\n\n    private actionUrl: string;\n    private headers: Headers;\n\n    constructor(private _http: Http, private _configuration: Configuration) {\n\n        this.actionUrl = _configuration.Server + 'api/personcity/';\n\n        this.headers = new Headers();\n        this.headers.append('Content-Type', 'application/json');\n        this.headers.append('Accept', 'application/json');\n    }\n\n    public GetAll = (): Observable<any> => {\n        return this._http.get(this.actionUrl).map((response: Response) => <any>response.json());\n\n    }\n\n    public CreateIndex = (): Observable<Response> => {\n        let url = this.actionUrl + \"createindex\";\n        return this._http.get(url).map((response: Response) => <any>response.json());\n    }\n\n    public IndexExists = (): Observable<boolean> => {\n        let url = this.actionUrl + \"indexexists\";\n        return this._http.get(url).map((response: Response) => <any>response.json());\n    }\n\n    public CreateTestData = (): Observable<Response> => {\n        let url = this.actionUrl + \"createtestdata\";\n        return this._http.get(url).map((response: Response) => <any>response.json());\n    }\n \n}\n\n\n/** WEBPACK FOOTER **\n ** ./angular2App/app/services/searchDataService.ts\n **/","\r\nexport class PersonCity {\r\n    public id: number;\r\n    public name: string;\r\n    public info: string;\r\n    public familyName: string;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./angular2App/app/autocomplete/personCity.ts\n **/","module.exports = \"<div class=\\\"panel-group\\\">\\r\\n\\r\\n    <p>Elasticsearch Index exists: {{IndexExists}}</p> \\r\\n    <button (click)=\\\"CreateIndex()\\\" *ngIf=\\\"!IndexExists\\\">Create Index</button>\\r\\n    <button (click)=\\\"CreateTestData()\\\" *ngIf=\\\"IndexExists\\\">Create TestData</button>\\r\\n    \\r\\n    <hr />\\r\\n    <br />\\r\\n\\r\\n    <autocompletesearch [(bindModelPersonCity)]=\\\"SelectedPersonCity\\\" >\\r\\n    </autocompletesearch>\\r\\n\\r\\n    <hr />\\r\\n\\r\\n    SELECTED : <span>{{SelectedPersonCity.name}} {{SelectedPersonCity.familyName}} </span>\\r\\n    <br />\\r\\n    INFO     : <span>{{SelectedPersonCity.info}}</span>\\r\\n    <hr />\\r\\n\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./angular2App/app/home/home.component.html\n ** module id = 69\n ** module chunks = 0\n **/","import { Component, Inject, EventEmitter, Input, Output, OnInit, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { Http, Response } from \"@angular/http\";\r\n\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Router } from  '@angular/router';\r\n\r\nimport { Configuration } from '../app.constants';\r\nimport { PersonCityDataService } from './personCityDataService';\r\nimport { PersonCity } from './personCity';\r\n\r\nimport { CompleterService, CompleterItem } from 'ng2-completer';\r\n\r\n@Component({\r\n    selector: 'autocompletesearch',\r\n  template: `\r\n<ng2-completer [dataService]=\"dataService\" (selected)=\"onPersonCitySelected($event)\" [minSearchLength]=\"0\" ></ng2-completer>\r\n\r\n`\r\n})\r\n    \r\nexport class AutocompleteSearchComponent implements OnInit    {\r\n\r\n    constructor(private completerService: CompleterService, private http: Http, private _configuration: Configuration) {\r\n\r\n        let actionUrl = _configuration.Server + 'api/personcity/search/';\r\n        this.dataService = new PersonCityDataService(http, _configuration); ////completerService.local(\"name, info, familyName\", 'name');\r\n    }\r\n\r\n    @Output() bindModelPersonCityChange = new EventEmitter<PersonCity>();\r\n    @Input() bindModelPersonCity: PersonCity;\r\n\r\n    private searchStr: string;\r\n    private dataService: PersonCityDataService;\r\n\r\n    ngOnInit() {\r\n        console.log(\"ngOnInit AutocompleteSearch\");\r\n    }\r\n\r\n    public onPersonCitySelected(selected: CompleterItem) {\r\n        console.log(selected);\r\n        this.bindModelPersonCityChange.emit(selected.originalObject);\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./angular2App/app/autocomplete/search.component.ts\n **/","import { Http, Response } from \"@angular/http\";\r\nimport { Subject } from \"rxjs/Subject\";\r\n\r\nimport { CompleterData, CompleterItem } from 'ng2-completer';\r\nimport { Configuration } from '../app.constants';\r\n\r\nexport class PersonCityDataService extends Subject<CompleterItem[]> implements CompleterData {\r\n    constructor(private http: Http, private _configuration: Configuration) {\r\n        super();\r\n\r\n        this.actionUrl = _configuration.Server + 'api/personcity/search/';\r\n    }\r\n\r\n    private actionUrl: string;\r\n\r\n    public search(term: string): void {\r\n        this.http.get(this.actionUrl + term)\r\n            .map((res: Response) => {\r\n                // Convert the result to CompleterItem[]\r\n                let data = res.json();\r\n                let matches: CompleterItem[] = data.map((personcity: any) => {\r\n                    return {\r\n                        title: personcity.name,\r\n                        description: personcity.familyName + \", \" + personcity.info, \r\n                        originalObject: personcity\r\n                    }\r\n                });\r\n                this.next(matches);\r\n            })\r\n            .subscribe();\r\n    }\r\n\r\n    public cancel() {\r\n        // Handle cancel\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./angular2App/app/autocomplete/personCityDataService.ts\n **/"],"sourceRoot":""}